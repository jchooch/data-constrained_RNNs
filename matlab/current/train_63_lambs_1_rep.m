%%% train_63_lambs_1_rep.m

clear all;
close all;
clc;

load('calact410Nstd.mat');
load('inputs.mat');
epochs_per_rep = 30;

big_list_of_lambdas = [-1, -1e-1, -1e-2, -1e-3, -1e-4, -1e-5, ...
    -1e-6, -1e-7, -1e-8, -1e-9, -1e-10, ...
    -1e-11, -1e-12, -1e-13, -1e-14, -1e-15, ...
    -1e-16, -1e-17, -1e-18, -1e-19, -1e-20, ...
    -1e-21, -1e-22, -1e-23, -1e-24, -1e-25, ...
    -1e-26, -1e-27, -1e-28, -1e-29, -1e-30, ...
    0, ...
    1e-30, 1e-29, 1e-28, 1e-27, 1e-26, ...
    1e-25, 1e-24, 1e-23, 1e-22, 1e-21, ...
    1e-20, 1e-19, 1e-18, 1e-17, 1e-16, ...
    1e-15, 1e-14, 1e-13, 1e-12, 1e-11, ...
    1e-10, 1e-9, 1e-8, 1e-7, 1e-6, ...
    1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1];

mean_absolute_weights = [];

for index = 1:length(big_list_of_lambdas)
    fprintf('\nLambda: %e\n', big_list_of_lambdas(index))
    [J, R, N, T, varData, chi2, pVars] = dcRNN_train_L1_ver1(calact410Nstd, inputs, epochs_per_rep, big_list_of_lambdas(index));
    J_abs_mean = mean(abs(J), 'all');
    mean_absolute_weights = [mean_absolute_weights; J_abs_mean];
    network.J = J; network.R = R; network.N = N; network.T = T;
    network.varData = varData; network.chi2 = chi2; network.pVars = pVars;
    save(sprintf('63L_1R_ensemble/63L_1R_%i.mat', index), 'network');
    clear network
end
